
t31：     文件格式 elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x11b>
  400248:	78 38                	js     400282 <_init-0x10e>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 4e f9             	add    %cl,-0x7(%rsi)
  400286:	58                   	pop    %rax
  400287:	01 6f 78             	add    %ebp,0x78(%rdi)
  40028a:	41 07                	rex.B (bad) 
  40028c:	37                   	(bad)  
  40028d:	ba 5a d5 a6 fe       	mov    $0xfea6d55a,%edx
  400292:	2e 4d b6 bd          	cs rex.WRB mov $0xbd,%r14b
  400296:	b3 17                	mov    $0x17,%bl

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	1d 00 00 00 20       	sbb    $0x20000000,%eax
	...

Disassembly of section .dynstr:

0000000000400300 <.dynstr>:
  400300:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400304:	63 2e                	movslq (%rsi),%ebp
  400306:	73 6f                	jae    400377 <_init-0x19>
  400308:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
  40030d:	6c                   	insb   (%dx),%es:(%rdi)
  40030e:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400315:	72 74                	jb     40038b <_init-0x5>
  400317:	5f                   	pop    %rdi
  400318:	6d                   	insl   (%dx),%es:(%rdi)
  400319:	61                   	(bad)  
  40031a:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400321:	6f                   	outsl  %ds:(%rsi),(%dx)
  400322:	6e                   	outsb  %ds:(%rsi),(%dx)
  400323:	5f                   	pop    %rdi
  400324:	73 74                	jae    40039a <_init+0xa>
  400326:	61                   	(bad)  
  400327:	72 74                	jb     40039d <_init+0xd>
  400329:	5f                   	pop    %rdi
  40032a:	5f                   	pop    %rdi
  40032b:	00 47 4c             	add    %al,0x4c(%rdi)
  40032e:	49                   	rex.WB
  40032f:	42                   	rex.X
  400330:	43 5f                	rex.XB pop %r15
  400332:	32 2e                	xor    (%rsi),%ch
  400334:	32 2e                	xor    (%rsi),%ch
  400336:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400338 <.gnu.version>:
  400338:	00 00                	add    %al,(%rax)
  40033a:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400340 <.gnu.version_r>:
  400340:	01 00                	add    %eax,(%rax)
  400342:	01 00                	add    %eax,(%rax)
  400344:	01 00                	add    %eax,(%rax)
  400346:	00 00                	add    %al,(%rax)
  400348:	10 00                	adc    %al,(%rax)
  40034a:	00 00                	add    %al,(%rax)
  40034c:	00 00                	add    %al,(%rax)
  40034e:	00 00                	add    %al,(%rax)
  400350:	75 1a                	jne    40036c <_init-0x24>
  400352:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400358:	2c 00                	sub    $0x0,%al
  40035a:	00 00                	add    %al,(%rax)
  40035c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400360 <.rela.dyn>:
  400360:	f8                   	clc    
  400361:	0f 60 00             	punpcklbw (%rax),%mm0
  400364:	00 00                	add    %al,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	06                   	(bad)  
  400369:	00 00                	add    %al,(%rax)
  40036b:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .rela.plt:

0000000000400378 <.rela.plt>:
  400378:	18 10                	sbb    %dl,(%rax)
  40037a:	60                   	(bad)  
  40037b:	00 00                	add    %al,(%rax)
  40037d:	00 00                	add    %al,(%rax)
  40037f:	00 07                	add    %al,(%rdi)
  400381:	00 00                	add    %al,(%rax)
  400383:	00 01                	add    %al,(%rcx)
	...

Disassembly of section .init:

0000000000400390 <_init>:
_init():
  400390:	48 83 ec 08          	sub    $0x8,%rsp
  400394:	48 8b 05 5d 0c 20 00 	mov    0x200c5d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  40039b:	48 85 c0             	test   %rax,%rax
  40039e:	74 05                	je     4003a5 <_init+0x15>
  4003a0:	e8 2b 00 00 00       	callq  4003d0 <__libc_start_main@plt+0x10>
  4003a5:	48 83 c4 08          	add    $0x8,%rsp
  4003a9:	c3                   	retq   

Disassembly of section .plt:

00000000004003b0 <__libc_start_main@plt-0x10>:
  4003b0:	ff 35 52 0c 20 00    	pushq  0x200c52(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003b6:	ff 25 54 0c 20 00    	jmpq   *0x200c54(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003c0 <__libc_start_main@plt>:
  4003c0:	ff 25 52 0c 20 00    	jmpq   *0x200c52(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003c6:	68 00 00 00 00       	pushq  $0x0
  4003cb:	e9 e0 ff ff ff       	jmpq   4003b0 <_init+0x20>

Disassembly of section .plt.got:

00000000004003d0 <.plt.got>:
  4003d0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  4003d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000004003e0 <_start>:
_start():
  4003e0:	31 ed                	xor    %ebp,%ebp
  4003e2:	49 89 d1             	mov    %rdx,%r9
  4003e5:	5e                   	pop    %rsi
  4003e6:	48 89 e2             	mov    %rsp,%rdx
  4003e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4003ed:	50                   	push   %rax
  4003ee:	54                   	push   %rsp
  4003ef:	49 c7 c0 10 06 40 00 	mov    $0x400610,%r8
  4003f6:	48 c7 c1 a0 05 40 00 	mov    $0x4005a0,%rcx
  4003fd:	48 c7 c7 7a 05 40 00 	mov    $0x40057a,%rdi
  400404:	e8 b7 ff ff ff       	callq  4003c0 <__libc_start_main@plt>
  400409:	f4                   	hlt    
  40040a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400410 <deregister_tm_clones>:
deregister_tm_clones():
  400410:	b8 37 10 60 00       	mov    $0x601037,%eax
  400415:	55                   	push   %rbp
  400416:	48 2d 30 10 60 00    	sub    $0x601030,%rax
  40041c:	48 83 f8 0e          	cmp    $0xe,%rax
  400420:	48 89 e5             	mov    %rsp,%rbp
  400423:	76 1b                	jbe    400440 <deregister_tm_clones+0x30>
  400425:	b8 00 00 00 00       	mov    $0x0,%eax
  40042a:	48 85 c0             	test   %rax,%rax
  40042d:	74 11                	je     400440 <deregister_tm_clones+0x30>
  40042f:	5d                   	pop    %rbp
  400430:	bf 30 10 60 00       	mov    $0x601030,%edi
  400435:	ff e0                	jmpq   *%rax
  400437:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40043e:	00 00 
  400440:	5d                   	pop    %rbp
  400441:	c3                   	retq   
  400442:	0f 1f 40 00          	nopl   0x0(%rax)
  400446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40044d:	00 00 00 

0000000000400450 <register_tm_clones>:
register_tm_clones():
  400450:	be 30 10 60 00       	mov    $0x601030,%esi
  400455:	55                   	push   %rbp
  400456:	48 81 ee 30 10 60 00 	sub    $0x601030,%rsi
  40045d:	48 c1 fe 03          	sar    $0x3,%rsi
  400461:	48 89 e5             	mov    %rsp,%rbp
  400464:	48 89 f0             	mov    %rsi,%rax
  400467:	48 c1 e8 3f          	shr    $0x3f,%rax
  40046b:	48 01 c6             	add    %rax,%rsi
  40046e:	48 d1 fe             	sar    %rsi
  400471:	74 15                	je     400488 <register_tm_clones+0x38>
  400473:	b8 00 00 00 00       	mov    $0x0,%eax
  400478:	48 85 c0             	test   %rax,%rax
  40047b:	74 0b                	je     400488 <register_tm_clones+0x38>
  40047d:	5d                   	pop    %rbp
  40047e:	bf 30 10 60 00       	mov    $0x601030,%edi
  400483:	ff e0                	jmpq   *%rax
  400485:	0f 1f 00             	nopl   (%rax)
  400488:	5d                   	pop    %rbp
  400489:	c3                   	retq   
  40048a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400490 <__do_global_dtors_aux>:
__do_global_dtors_aux():
  400490:	80 3d 99 0b 20 00 00 	cmpb   $0x0,0x200b99(%rip)        # 601030 <__TMC_END__>
  400497:	75 11                	jne    4004aa <__do_global_dtors_aux+0x1a>
  400499:	55                   	push   %rbp
  40049a:	48 89 e5             	mov    %rsp,%rbp
  40049d:	e8 6e ff ff ff       	callq  400410 <deregister_tm_clones>
  4004a2:	5d                   	pop    %rbp
  4004a3:	c6 05 86 0b 20 00 01 	movb   $0x1,0x200b86(%rip)        # 601030 <__TMC_END__>
  4004aa:	f3 c3                	repz retq 
  4004ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004b0 <frame_dummy>:
frame_dummy():
  4004b0:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  4004b5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4004b9:	75 05                	jne    4004c0 <frame_dummy+0x10>
  4004bb:	eb 93                	jmp    400450 <register_tm_clones>
  4004bd:	0f 1f 00             	nopl   (%rax)
  4004c0:	b8 00 00 00 00       	mov    $0x0,%eax
  4004c5:	48 85 c0             	test   %rax,%rax
  4004c8:	74 f1                	je     4004bb <frame_dummy+0xb>
  4004ca:	55                   	push   %rbp
  4004cb:	48 89 e5             	mov    %rsp,%rbp
  4004ce:	ff d0                	callq  *%rax
  4004d0:	5d                   	pop    %rbp
  4004d1:	e9 7a ff ff ff       	jmpq   400450 <register_tm_clones>

00000000004004d6 <add>:
add():
  4004d6:	55                   	push   %rbp
  4004d7:	48 89 e5             	mov    %rsp,%rbp
  4004da:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4004dd:	89 75 e8             	mov    %esi,-0x18(%rbp)
  4004e0:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4004e3:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4004e6:	01 d0                	add    %edx,%eax
  4004e8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4004eb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4004ee:	5d                   	pop    %rbp
  4004ef:	c3                   	retq   

00000000004004f0 <print>:
print():
  4004f0:	55                   	push   %rbp
  4004f1:	48 89 e5             	mov    %rsp,%rbp
  4004f4:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
  4004fb:	89 bd 3c ff ff ff    	mov    %edi,-0xc4(%rbp)
  400501:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  400508:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  40050f:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  400516:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  40051d:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  400524:	84 c0                	test   %al,%al
  400526:	74 20                	je     400548 <print+0x58>
  400528:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40052c:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  400530:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  400534:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  400538:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  40053c:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  400540:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  400544:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  400548:	c7 85 44 ff ff ff 02 	movl   $0x2,-0xbc(%rbp)
  40054f:	00 00 00 
  400552:	c7 85 48 ff ff ff 03 	movl   $0x3,-0xb8(%rbp)
  400559:	00 00 00 
  40055c:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
  400562:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
  400568:	89 d6                	mov    %edx,%esi
  40056a:	89 c7                	mov    %eax,%edi
  40056c:	e8 65 ff ff ff       	callq  4004d6 <add>
  400571:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  400577:	90                   	nop
  400578:	c9                   	leaveq 
  400579:	c3                   	retq   

000000000040057a <main>:
main():
  40057a:	55                   	push   %rbp
  40057b:	48 89 e5             	mov    %rsp,%rbp
  40057e:	be 03 00 00 00       	mov    $0x3,%esi
  400583:	bf 02 00 00 00       	mov    $0x2,%edi
  400588:	b8 00 00 00 00       	mov    $0x0,%eax
  40058d:	e8 5e ff ff ff       	callq  4004f0 <print>
  400592:	90                   	nop
  400593:	5d                   	pop    %rbp
  400594:	c3                   	retq   
  400595:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40059c:	00 00 00 
  40059f:	90                   	nop

00000000004005a0 <__libc_csu_init>:
__libc_csu_init():
  4005a0:	41 57                	push   %r15
  4005a2:	41 56                	push   %r14
  4005a4:	41 89 ff             	mov    %edi,%r15d
  4005a7:	41 55                	push   %r13
  4005a9:	41 54                	push   %r12
  4005ab:	4c 8d 25 5e 08 20 00 	lea    0x20085e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4005b2:	55                   	push   %rbp
  4005b3:	48 8d 2d 5e 08 20 00 	lea    0x20085e(%rip),%rbp        # 600e18 <__init_array_end>
  4005ba:	53                   	push   %rbx
  4005bb:	49 89 f6             	mov    %rsi,%r14
  4005be:	49 89 d5             	mov    %rdx,%r13
  4005c1:	4c 29 e5             	sub    %r12,%rbp
  4005c4:	48 83 ec 08          	sub    $0x8,%rsp
  4005c8:	48 c1 fd 03          	sar    $0x3,%rbp
  4005cc:	e8 bf fd ff ff       	callq  400390 <_init>
  4005d1:	48 85 ed             	test   %rbp,%rbp
  4005d4:	74 20                	je     4005f6 <__libc_csu_init+0x56>
  4005d6:	31 db                	xor    %ebx,%ebx
  4005d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005df:	00 
  4005e0:	4c 89 ea             	mov    %r13,%rdx
  4005e3:	4c 89 f6             	mov    %r14,%rsi
  4005e6:	44 89 ff             	mov    %r15d,%edi
  4005e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005ed:	48 83 c3 01          	add    $0x1,%rbx
  4005f1:	48 39 eb             	cmp    %rbp,%rbx
  4005f4:	75 ea                	jne    4005e0 <__libc_csu_init+0x40>
  4005f6:	48 83 c4 08          	add    $0x8,%rsp
  4005fa:	5b                   	pop    %rbx
  4005fb:	5d                   	pop    %rbp
  4005fc:	41 5c                	pop    %r12
  4005fe:	41 5d                	pop    %r13
  400600:	41 5e                	pop    %r14
  400602:	41 5f                	pop    %r15
  400604:	c3                   	retq   
  400605:	90                   	nop
  400606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40060d:	00 00 00 

0000000000400610 <__libc_csu_fini>:
__libc_csu_fini():
  400610:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400614 <_fini>:
_fini():
  400614:	48 83 ec 08          	sub    $0x8,%rsp
  400618:	48 83 c4 08          	add    $0x8,%rsp
  40061c:	c3                   	retq   

Disassembly of section .rodata:

0000000000400620 <_IO_stdin_used>:
  400620:	01 00                	add    %eax,(%rax)
  400622:	02 00                	add    (%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000400624 <__GNU_EH_FRAME_HDR>:
__GNU_EH_FRAME_HDR():
  400624:	01 1b                	add    %ebx,(%rbx)
  400626:	03 3b                	add    (%rbx),%edi
  400628:	40 00 00             	add    %al,(%rax)
  40062b:	00 07                	add    %al,(%rdi)
  40062d:	00 00                	add    %al,(%rax)
  40062f:	00 8c fd ff ff 8c 00 	add    %cl,0x8cffff(%rbp,%rdi,8)
  400636:	00 00                	add    %al,(%rax)
  400638:	bc fd ff ff 5c       	mov    $0x5cfffffd,%esp
  40063d:	00 00                	add    %al,(%rax)
  40063f:	00 b2 fe ff ff b4    	add    %dh,-0x4b000002(%rdx)
  400645:	00 00                	add    %al,(%rax)
  400647:	00 cc                	add    %cl,%ah
  400649:	fe                   	(bad)  
  40064a:	ff                   	(bad)  
  40064b:	ff d4                	callq  *%rsp
  40064d:	00 00                	add    %al,(%rax)
  40064f:	00 56 ff             	add    %dl,-0x1(%rsi)
  400652:	ff                   	(bad)  
  400653:	ff f4                	push   %rsp
  400655:	00 00                	add    %al,(%rax)
  400657:	00 7c ff ff          	add    %bh,-0x1(%rdi,%rdi,8)
  40065b:	ff 14 01             	callq  *(%rcx,%rax,1)
  40065e:	00 00                	add    %al,(%rax)
  400660:	ec                   	in     (%dx),%al
  400661:	ff                   	(bad)  
  400662:	ff                   	(bad)  
  400663:	ff 5c 01 00          	lcall  *0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400668 <__FRAME_END__-0x130>:
  400668:	14 00                	adc    $0x0,%al
  40066a:	00 00                	add    %al,(%rax)
  40066c:	00 00                	add    %al,(%rax)
  40066e:	00 00                	add    %al,(%rax)
  400670:	01 7a 52             	add    %edi,0x52(%rdx)
  400673:	00 01                	add    %al,(%rcx)
  400675:	78 10                	js     400687 <__GNU_EH_FRAME_HDR+0x63>
  400677:	01 1b                	add    %ebx,(%rbx)
  400679:	0c 07                	or     $0x7,%al
  40067b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400681:	00 00                	add    %al,(%rax)
  400683:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400686:	00 00                	add    %al,(%rax)
  400688:	58                   	pop    %rax
  400689:	fd                   	std    
  40068a:	ff                   	(bad)  
  40068b:	ff 2a                	ljmp   *(%rdx)
	...
  400695:	00 00                	add    %al,(%rax)
  400697:	00 14 00             	add    %dl,(%rax,%rax,1)
  40069a:	00 00                	add    %al,(%rax)
  40069c:	00 00                	add    %al,(%rax)
  40069e:	00 00                	add    %al,(%rax)
  4006a0:	01 7a 52             	add    %edi,0x52(%rdx)
  4006a3:	00 01                	add    %al,(%rcx)
  4006a5:	78 10                	js     4006b7 <__GNU_EH_FRAME_HDR+0x93>
  4006a7:	01 1b                	add    %ebx,(%rbx)
  4006a9:	0c 07                	or     $0x7,%al
  4006ab:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  4006b1:	00 00                	add    %al,(%rax)
  4006b3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4006b6:	00 00                	add    %al,(%rax)
  4006b8:	f8                   	clc    
  4006b9:	fc                   	cld    
  4006ba:	ff                   	(bad)  
  4006bb:	ff 20                	jmpq   *(%rax)
  4006bd:	00 00                	add    %al,(%rax)
  4006bf:	00 00                	add    %al,(%rax)
  4006c1:	0e                   	(bad)  
  4006c2:	10 46 0e             	adc    %al,0xe(%rsi)
  4006c5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4006c8:	0b 77 08             	or     0x8(%rdi),%esi
  4006cb:	80 00 3f             	addb   $0x3f,(%rax)
  4006ce:	1a 3b                	sbb    (%rbx),%bh
  4006d0:	2a 33                	sub    (%rbx),%dh
  4006d2:	24 22                	and    $0x22,%al
  4006d4:	00 00                	add    %al,(%rax)
  4006d6:	00 00                	add    %al,(%rax)
  4006d8:	1c 00                	sbb    $0x0,%al
  4006da:	00 00                	add    %al,(%rax)
  4006dc:	44 00 00             	add    %r8b,(%rax)
  4006df:	00 f6                	add    %dh,%dh
  4006e1:	fd                   	std    
  4006e2:	ff                   	(bad)  
  4006e3:	ff 1a                	lcall  *(%rdx)
  4006e5:	00 00                	add    %al,(%rax)
  4006e7:	00 00                	add    %al,(%rax)
  4006e9:	41 0e                	rex.B (bad) 
  4006eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006f1:	55                   	push   %rbp
  4006f2:	0c 07                	or     $0x7,%al
  4006f4:	08 00                	or     %al,(%rax)
  4006f6:	00 00                	add    %al,(%rax)
  4006f8:	1c 00                	sbb    $0x0,%al
  4006fa:	00 00                	add    %al,(%rax)
  4006fc:	64 00 00             	add    %al,%fs:(%rax)
  4006ff:	00 f0                	add    %dh,%al
  400701:	fd                   	std    
  400702:	ff                   	(bad)  
  400703:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
  400709:	41 0e                	rex.B (bad) 
  40070b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400711:	02 85 0c 07 08 00    	add    0x8070c(%rbp),%al
  400717:	00 1c 00             	add    %bl,(%rax,%rax,1)
  40071a:	00 00                	add    %al,(%rax)
  40071c:	84 00                	test   %al,(%rax)
  40071e:	00 00                	add    %al,(%rax)
  400720:	5a                   	pop    %rdx
  400721:	fe                   	(bad)  
  400722:	ff                   	(bad)  
  400723:	ff 1b                	lcall  *(%rbx)
  400725:	00 00                	add    %al,(%rax)
  400727:	00 00                	add    %al,(%rax)
  400729:	41 0e                	rex.B (bad) 
  40072b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  400731:	56                   	push   %rsi
  400732:	0c 07                	or     $0x7,%al
  400734:	08 00                	or     %al,(%rax)
  400736:	00 00                	add    %al,(%rax)
  400738:	44 00 00             	add    %r8b,(%rax)
  40073b:	00 a4 00 00 00 60 fe 	add    %ah,-0x1a00000(%rax,%rax,1)
  400742:	ff                   	(bad)  
  400743:	ff 65 00             	jmpq   *0x0(%rbp)
  400746:	00 00                	add    %al,(%rax)
  400748:	00 42 0e             	add    %al,0xe(%rdx)
  40074b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400751:	8e 03                	mov    (%rbx),%es
  400753:	45 0e                	rex.RB (bad) 
  400755:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  40075b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff867015a9 <_end+0xffffffff86100571>
  400761:	06                   	(bad)  
  400762:	48 0e                	rex.W (bad) 
  400764:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40076a:	72 0e                	jb     40077a <__GNU_EH_FRAME_HDR+0x156>
  40076c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40076f:	30 41 0e             	xor    %al,0xe(%rcx)
  400772:	28 42 0e             	sub    %al,0xe(%rdx)
  400775:	20 42 0e             	and    %al,0xe(%rdx)
  400778:	18 42 0e             	sbb    %al,0xe(%rdx)
  40077b:	10 42 0e             	adc    %al,0xe(%rdx)
  40077e:	08 00                	or     %al,(%rax)
  400780:	14 00                	adc    $0x0,%al
  400782:	00 00                	add    %al,(%rax)
  400784:	ec                   	in     (%dx),%al
  400785:	00 00                	add    %al,(%rax)
  400787:	00 88 fe ff ff 02    	add    %cl,0x2fffffe(%rax)
	...

0000000000400798 <__FRAME_END__>:
  400798:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
__init_array_start():
  600e10:	b0 04                	mov    $0x4,%al
  600e12:	40 00 00             	add    %al,(%rax)
  600e15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	90                   	nop
  600e19:	04 40                	add    $0x40,%al
  600e1b:	00 00                	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	90                   	nop
  600e41:	03 40 00             	add    0x0(%rax),%eax
  600e44:	00 00                	add    %al,(%rax)
  600e46:	00 00                	add    %al,(%rax)
  600e48:	0d 00 00 00 00       	or     $0x0,%eax
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 14 06             	add    %dl,(%rsi,%rax,1)
  600e52:	40 00 00             	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
  600e59:	00 00                	add    %al,(%rax)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 10                	add    %dl,(%rax)
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 00                	add    %al,(%rax)
  600eb1:	03 40 00             	add    0x0(%rax),%eax
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 38                	add    %bh,(%rax)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 0b                	add    %cl,(%rbx)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 18                	add    %bl,(%rax)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	18 00                	sbb    %al,(%rax)
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 78 03             	add    %bh,0x3(%rax)
  600f32:	40 00 00             	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 60 03             	add    %ah,0x3(%rax)
  600f42:	40 00 00             	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 18                	add    %bl,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 40 03             	add    %al,0x3(%rax)
  600f72:	40 00 00             	add    %al,(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 38                	add    %bh,(%rax)
  600f91:	03 40 00             	add    0x0(%rax),%eax
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 c6                	add    %al,%dh
  601019:	03 40 00             	add    0x0(%rax),%eax
  60101c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601020 <__data_start>:
	...

0000000000601028 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601030 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400318>
   a:	74 75                	je     81 <_init-0x40030f>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3440 <_end+0x2fce2408>
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x400301>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%rsi,%rbp,1)
  22:	39 29                	cmp    %ebp,(%rcx)
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3458 <_end+0x2fce2420>
  2a:	20 32                	and    %dh,(%rdx)
  2c:	30 31                	xor    %dh,(%rcx)
  2e:	36 30 36             	xor    %dh,%ss:(%rsi)
  31:	30 39                	xor    %bh,(%rcx)
	...
