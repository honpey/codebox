
t32：     文件格式 elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x153>
  400248:	78 38                	js     400282 <_init-0x146>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 ce                	add    %cl,%dh
  400285:	e9 45 97 0d 92       	jmpq   ffffffff924d99cf <_end+0xffffffff91ed898f>
  40028a:	dc 12                	fcoml  (%rdx)
  40028c:	5a                   	pop    %rdx
  40028d:	86 7d 11             	xchg   %bh,0x11(%rbp)
  400290:	e1 41                	loope  4002d3 <_init-0xf5>
  400292:	0c 65                	or     $0x65,%al
  400294:	d4                   	(bad)  
  400295:	18                   	.byte 0x18
  400296:	b1 72                	mov    $0x72,%cl

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	12 00                	adc    (%rax),%al
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	24 00                	and    $0x0,%al
  400302:	00 00                	add    %al,(%rax)
  400304:	20 00                	and    %al,(%rax)
	...

Disassembly of section .dynstr:

0000000000400318 <.dynstr>:
  400318:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  40031c:	63 2e                	movslq (%rsi),%ebp
  40031e:	73 6f                	jae    40038f <_init-0x39>
  400320:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
  400325:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  40032c:	6c                   	insb   (%dx),%es:(%rdi)
  40032d:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400334:	72 74                	jb     4003aa <_init-0x1e>
  400336:	5f                   	pop    %rdi
  400337:	6d                   	insl   (%dx),%es:(%rdi)
  400338:	61                   	(bad)  
  400339:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  400340:	6f                   	outsl  %ds:(%rsi),(%dx)
  400341:	6e                   	outsb  %ds:(%rsi),(%dx)
  400342:	5f                   	pop    %rdi
  400343:	73 74                	jae    4003b9 <_init-0xf>
  400345:	61                   	(bad)  
  400346:	72 74                	jb     4003bc <_init-0xc>
  400348:	5f                   	pop    %rdi
  400349:	5f                   	pop    %rdi
  40034a:	00 47 4c             	add    %al,0x4c(%rdi)
  40034d:	49                   	rex.WB
  40034e:	42                   	rex.X
  40034f:	43 5f                	rex.XB pop %r15
  400351:	32 2e                	xor    (%rsi),%ch
  400353:	32 2e                	xor    (%rsi),%ch
  400355:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400358 <.gnu.version>:
  400358:	00 00                	add    %al,(%rax)
  40035a:	02 00                	add    (%rax),%al
  40035c:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400360 <.gnu.version_r>:
  400360:	01 00                	add    %eax,(%rax)
  400362:	01 00                	add    %eax,(%rax)
  400364:	01 00                	add    %eax,(%rax)
  400366:	00 00                	add    %al,(%rax)
  400368:	10 00                	adc    %al,(%rax)
  40036a:	00 00                	add    %al,(%rax)
  40036c:	00 00                	add    %al,(%rax)
  40036e:	00 00                	add    %al,(%rax)
  400370:	75 1a                	jne    40038c <_init-0x3c>
  400372:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400378:	33 00                	xor    (%rax),%eax
  40037a:	00 00                	add    %al,(%rax)
  40037c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000400380 <.rela.dyn>:
  400380:	f8                   	clc    
  400381:	0f 60 00             	punpcklbw (%rax),%mm0
  400384:	00 00                	add    %al,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	06                   	(bad)  
  400389:	00 00                	add    %al,(%rax)
  40038b:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .rela.plt:

0000000000400398 <.rela.plt>:
  400398:	18 10                	sbb    %dl,(%rax)
  40039a:	60                   	(bad)  
  40039b:	00 00                	add    %al,(%rax)
  40039d:	00 00                	add    %al,(%rax)
  40039f:	00 07                	add    %al,(%rdi)
  4003a1:	00 00                	add    %al,(%rax)
  4003a3:	00 01                	add    %al,(%rcx)
	...
  4003ad:	00 00                	add    %al,(%rax)
  4003af:	00 20                	add    %ah,(%rax)
  4003b1:	10 60 00             	adc    %ah,0x0(%rax)
  4003b4:	00 00                	add    %al,(%rax)
  4003b6:	00 00                	add    %al,(%rax)
  4003b8:	07                   	(bad)  
  4003b9:	00 00                	add    %al,(%rax)
  4003bb:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

00000000004003c8 <_init>:
_init():
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 05                	je     4003dd <_init+0x15>
  4003d8:	e8 43 00 00 00       	callq  400420 <__libc_start_main@plt+0x10>
  4003dd:	48 83 c4 08          	add    $0x8,%rsp
  4003e1:	c3                   	retq   

Disassembly of section .plt:

00000000004003f0 <printf@plt-0x10>:
  4003f0:	ff 35 12 0c 20 00    	pushq  0x200c12(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003f6:	ff 25 14 0c 20 00    	jmpq   *0x200c14(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400400 <printf@plt>:
  400400:	ff 25 12 0c 20 00    	jmpq   *0x200c12(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400406:	68 00 00 00 00       	pushq  $0x0
  40040b:	e9 e0 ff ff ff       	jmpq   4003f0 <_init+0x28>

0000000000400410 <__libc_start_main@plt>:
  400410:	ff 25 0a 0c 20 00    	jmpq   *0x200c0a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400416:	68 01 00 00 00       	pushq  $0x1
  40041b:	e9 d0 ff ff ff       	jmpq   4003f0 <_init+0x28>

Disassembly of section .plt.got:

0000000000400420 <.plt.got>:
  400420:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 600ff8 <_DYNAMIC+0x1d0>
  400426:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400430 <_start>:
_start():
  400430:	31 ed                	xor    %ebp,%ebp
  400432:	49 89 d1             	mov    %rdx,%r9
  400435:	5e                   	pop    %rsi
  400436:	48 89 e2             	mov    %rsp,%rdx
  400439:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40043d:	50                   	push   %rax
  40043e:	54                   	push   %rsp
  40043f:	49 c7 c0 f0 06 40 00 	mov    $0x4006f0,%r8
  400446:	48 c7 c1 80 06 40 00 	mov    $0x400680,%rcx
  40044d:	48 c7 c7 42 06 40 00 	mov    $0x400642,%rdi
  400454:	e8 b7 ff ff ff       	callq  400410 <__libc_start_main@plt>
  400459:	f4                   	hlt    
  40045a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400460 <deregister_tm_clones>:
deregister_tm_clones():
  400460:	b8 3f 10 60 00       	mov    $0x60103f,%eax
  400465:	55                   	push   %rbp
  400466:	48 2d 38 10 60 00    	sub    $0x601038,%rax
  40046c:	48 83 f8 0e          	cmp    $0xe,%rax
  400470:	48 89 e5             	mov    %rsp,%rbp
  400473:	76 1b                	jbe    400490 <deregister_tm_clones+0x30>
  400475:	b8 00 00 00 00       	mov    $0x0,%eax
  40047a:	48 85 c0             	test   %rax,%rax
  40047d:	74 11                	je     400490 <deregister_tm_clones+0x30>
  40047f:	5d                   	pop    %rbp
  400480:	bf 38 10 60 00       	mov    $0x601038,%edi
  400485:	ff e0                	jmpq   *%rax
  400487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40048e:	00 00 
  400490:	5d                   	pop    %rbp
  400491:	c3                   	retq   
  400492:	0f 1f 40 00          	nopl   0x0(%rax)
  400496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40049d:	00 00 00 

00000000004004a0 <register_tm_clones>:
register_tm_clones():
  4004a0:	be 38 10 60 00       	mov    $0x601038,%esi
  4004a5:	55                   	push   %rbp
  4004a6:	48 81 ee 38 10 60 00 	sub    $0x601038,%rsi
  4004ad:	48 c1 fe 03          	sar    $0x3,%rsi
  4004b1:	48 89 e5             	mov    %rsp,%rbp
  4004b4:	48 89 f0             	mov    %rsi,%rax
  4004b7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4004bb:	48 01 c6             	add    %rax,%rsi
  4004be:	48 d1 fe             	sar    %rsi
  4004c1:	74 15                	je     4004d8 <register_tm_clones+0x38>
  4004c3:	b8 00 00 00 00       	mov    $0x0,%eax
  4004c8:	48 85 c0             	test   %rax,%rax
  4004cb:	74 0b                	je     4004d8 <register_tm_clones+0x38>
  4004cd:	5d                   	pop    %rbp
  4004ce:	bf 38 10 60 00       	mov    $0x601038,%edi
  4004d3:	ff e0                	jmpq   *%rax
  4004d5:	0f 1f 00             	nopl   (%rax)
  4004d8:	5d                   	pop    %rbp
  4004d9:	c3                   	retq   
  4004da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004e0 <__do_global_dtors_aux>:
__do_global_dtors_aux():
  4004e0:	80 3d 51 0b 20 00 00 	cmpb   $0x0,0x200b51(%rip)        # 601038 <__TMC_END__>
  4004e7:	75 11                	jne    4004fa <__do_global_dtors_aux+0x1a>
  4004e9:	55                   	push   %rbp
  4004ea:	48 89 e5             	mov    %rsp,%rbp
  4004ed:	e8 6e ff ff ff       	callq  400460 <deregister_tm_clones>
  4004f2:	5d                   	pop    %rbp
  4004f3:	c6 05 3e 0b 20 00 01 	movb   $0x1,0x200b3e(%rip)        # 601038 <__TMC_END__>
  4004fa:	f3 c3                	repz retq 
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <frame_dummy>:
frame_dummy():
  400500:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400505:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400509:	75 05                	jne    400510 <frame_dummy+0x10>
  40050b:	eb 93                	jmp    4004a0 <register_tm_clones>
  40050d:	0f 1f 00             	nopl   (%rax)
  400510:	b8 00 00 00 00       	mov    $0x0,%eax
  400515:	48 85 c0             	test   %rax,%rax
  400518:	74 f1                	je     40050b <frame_dummy+0xb>
  40051a:	55                   	push   %rbp
  40051b:	48 89 e5             	mov    %rsp,%rbp
  40051e:	ff d0                	callq  *%rax
  400520:	5d                   	pop    %rbp
  400521:	e9 7a ff ff ff       	jmpq   4004a0 <register_tm_clones>

0000000000400526 <funcc>:
funcc():
  400526:	89 7c 24 ec          	mov    %edi,-0x14(%rsp)
  40052a:	8b 44 24 ec          	mov    -0x14(%rsp),%eax
  40052e:	89 c2                	mov    %eax,%edx
  400530:	c1 ea 1f             	shr    $0x1f,%edx
  400533:	01 d0                	add    %edx,%eax
  400535:	d1 f8                	sar    %eax
  400537:	89 44 24 fc          	mov    %eax,-0x4(%rsp)
  40053b:	8b 54 24 fc          	mov    -0x4(%rsp),%edx
  40053f:	89 d0                	mov    %edx,%eax
  400541:	c1 e0 03             	shl    $0x3,%eax
  400544:	01 d0                	add    %edx,%eax
  400546:	01 c0                	add    %eax,%eax
  400548:	01 d0                	add    %edx,%eax
  40054a:	c3                   	retq   

000000000040054b <funcb>:
funcb():
  40054b:	48 83 ec 08          	sub    $0x8,%rsp
  40054f:	89 7c 24 04          	mov    %edi,0x4(%rsp)
  400553:	8b 44 24 04          	mov    0x4(%rsp),%eax
  400557:	89 c7                	mov    %eax,%edi
  400559:	e8 c8 ff ff ff       	callq  400526 <funcc>
  40055e:	90                   	nop
  40055f:	48 83 c4 08          	add    $0x8,%rsp
  400563:	c3                   	retq   

0000000000400564 <funca>:
funca():
  400564:	48 83 ec 08          	sub    $0x8,%rsp
  400568:	89 7c 24 04          	mov    %edi,0x4(%rsp)
  40056c:	8b 44 24 04          	mov    0x4(%rsp),%eax
  400570:	89 c7                	mov    %eax,%edi
  400572:	e8 d4 ff ff ff       	callq  40054b <funcb>
  400577:	90                   	nop
  400578:	48 83 c4 08          	add    $0x8,%rsp
  40057c:	c3                   	retq   

000000000040057d <add>:
add():
  40057d:	48 83 ec 18          	sub    $0x18,%rsp
  400581:	89 7c 24 04          	mov    %edi,0x4(%rsp)
  400585:	89 34 24             	mov    %esi,(%rsp)
  400588:	8b 54 24 04          	mov    0x4(%rsp),%edx
  40058c:	8b 04 24             	mov    (%rsp),%eax
  40058f:	01 d0                	add    %edx,%eax
  400591:	89 44 24 10          	mov    %eax,0x10(%rsp)
  400595:	8b 44 24 04          	mov    0x4(%rsp),%eax
  400599:	89 c7                	mov    %eax,%edi
  40059b:	e8 c4 ff ff ff       	callq  400564 <funca>
  4005a0:	89 44 24 14          	mov    %eax,0x14(%rsp)
  4005a4:	8b 44 24 10          	mov    0x10(%rsp),%eax
  4005a8:	0f af 44 24 14       	imul   0x14(%rsp),%eax
  4005ad:	48 83 c4 18          	add    $0x18,%rsp
  4005b1:	c3                   	retq   

00000000004005b2 <print>:
print():
  4005b2:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  4005b9:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
  4005bd:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  4005c2:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
  4005c7:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
  4005cc:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
  4005d1:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
  4005d6:	84 c0                	test   %al,%al
  4005d8:	74 37                	je     400611 <print+0x5f>
  4005da:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
  4005df:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
  4005e4:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
  4005e9:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
  4005f0:	00 
  4005f1:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
  4005f8:	00 
  4005f9:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
  400600:	00 
  400601:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
  400608:	00 
  400609:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
  400610:	00 
  400611:	c7 44 24 14 17 00 00 	movl   $0x17,0x14(%rsp)
  400618:	00 
  400619:	c7 44 24 18 27 00 00 	movl   $0x27,0x18(%rsp)
  400620:	00 
  400621:	8b 54 24 18          	mov    0x18(%rsp),%edx
  400625:	8b 44 24 14          	mov    0x14(%rsp),%eax
  400629:	89 d6                	mov    %edx,%esi
  40062b:	89 c7                	mov    %eax,%edi
  40062d:	e8 4b ff ff ff       	callq  40057d <add>
  400632:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
  400636:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
  40063a:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
  400641:	c3                   	retq   

0000000000400642 <main>:
main():
  400642:	48 83 ec 08          	sub    $0x8,%rsp
  400646:	be 03 00 00 00       	mov    $0x3,%esi
  40064b:	bf 02 00 00 00       	mov    $0x2,%edi
  400650:	b8 00 00 00 00       	mov    $0x0,%eax
  400655:	e8 58 ff ff ff       	callq  4005b2 <print>
  40065a:	89 c6                	mov    %eax,%esi
  40065c:	bf 04 07 40 00       	mov    $0x400704,%edi
  400661:	b8 00 00 00 00       	mov    $0x0,%eax
  400666:	e8 95 fd ff ff       	callq  400400 <printf@plt>
  40066b:	90                   	nop
  40066c:	48 83 c4 08          	add    $0x8,%rsp
  400670:	c3                   	retq   
  400671:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400678:	00 00 00 
  40067b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400680 <__libc_csu_init>:
__libc_csu_init():
  400680:	41 57                	push   %r15
  400682:	41 56                	push   %r14
  400684:	41 89 ff             	mov    %edi,%r15d
  400687:	41 55                	push   %r13
  400689:	41 54                	push   %r12
  40068b:	4c 8d 25 7e 07 20 00 	lea    0x20077e(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400692:	55                   	push   %rbp
  400693:	48 8d 2d 7e 07 20 00 	lea    0x20077e(%rip),%rbp        # 600e18 <__init_array_end>
  40069a:	53                   	push   %rbx
  40069b:	49 89 f6             	mov    %rsi,%r14
  40069e:	49 89 d5             	mov    %rdx,%r13
  4006a1:	4c 29 e5             	sub    %r12,%rbp
  4006a4:	48 83 ec 08          	sub    $0x8,%rsp
  4006a8:	48 c1 fd 03          	sar    $0x3,%rbp
  4006ac:	e8 17 fd ff ff       	callq  4003c8 <_init>
  4006b1:	48 85 ed             	test   %rbp,%rbp
  4006b4:	74 20                	je     4006d6 <__libc_csu_init+0x56>
  4006b6:	31 db                	xor    %ebx,%ebx
  4006b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4006bf:	00 
  4006c0:	4c 89 ea             	mov    %r13,%rdx
  4006c3:	4c 89 f6             	mov    %r14,%rsi
  4006c6:	44 89 ff             	mov    %r15d,%edi
  4006c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006cd:	48 83 c3 01          	add    $0x1,%rbx
  4006d1:	48 39 eb             	cmp    %rbp,%rbx
  4006d4:	75 ea                	jne    4006c0 <__libc_csu_init+0x40>
  4006d6:	48 83 c4 08          	add    $0x8,%rsp
  4006da:	5b                   	pop    %rbx
  4006db:	5d                   	pop    %rbp
  4006dc:	41 5c                	pop    %r12
  4006de:	41 5d                	pop    %r13
  4006e0:	41 5e                	pop    %r14
  4006e2:	41 5f                	pop    %r15
  4006e4:	c3                   	retq   
  4006e5:	90                   	nop
  4006e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006ed:	00 00 00 

00000000004006f0 <__libc_csu_fini>:
__libc_csu_fini():
  4006f0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004006f4 <_fini>:
_fini():
  4006f4:	48 83 ec 08          	sub    $0x8,%rsp
  4006f8:	48 83 c4 08          	add    $0x8,%rsp
  4006fc:	c3                   	retq   

Disassembly of section .rodata:

0000000000400700 <_IO_stdin_used>:
  400700:	01 00                	add    %eax,(%rax)
  400702:	02 00                	add    (%rax),%al
  400704:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
  400709:	20 77 6f             	and    %dh,0x6f(%rdi)
  40070c:	72 6c                	jb     40077a <__GNU_EH_FRAME_HDR+0x62>
  40070e:	64 3a 20             	cmp    %fs:(%rax),%ah
  400711:	25                   	.byte 0x25
  400712:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000400718 <__GNU_EH_FRAME_HDR>:
__GNU_EH_FRAME_HDR():
  400718:	01 1b                	add    %ebx,(%rbx)
  40071a:	03 3b                	add    (%rbx),%edi
  40071c:	5c                   	pop    %rsp
  40071d:	00 00                	add    %al,(%rax)
  40071f:	00 0a                	add    %cl,(%rdx)
  400721:	00 00                	add    %al,(%rax)
  400723:	00 d8                	add    %bl,%al
  400725:	fc                   	cld    
  400726:	ff                   	(bad)  
  400727:	ff a8 00 00 00 18    	ljmp   *0x18000000(%rax)
  40072d:	fd                   	std    
  40072e:	ff                   	(bad)  
  40072f:	ff                   	(bad)  
  400730:	78 00                	js     400732 <__GNU_EH_FRAME_HDR+0x1a>
  400732:	00 00                	add    %al,(%rax)
  400734:	0e                   	(bad)  
  400735:	fe                   	(bad)  
  400736:	ff                   	(bad)  
  400737:	ff d0                	callq  *%rax
  400739:	00 00                	add    %al,(%rax)
  40073b:	00 33                	add    %dh,(%rbx)
  40073d:	fe                   	(bad)  
  40073e:	ff                   	(bad)  
  40073f:	ff                   	(bad)  
  400740:	e8 00 00 00 4c       	callq  4c400745 <_end+0x4bdff705>
  400745:	fe                   	(bad)  
  400746:	ff                   	(bad)  
  400747:	ff 00                	incl   (%rax)
  400749:	01 00                	add    %eax,(%rax)
  40074b:	00 65 fe             	add    %ah,-0x2(%rbp)
  40074e:	ff                   	(bad)  
  40074f:	ff 18                	lcall  *(%rax)
  400751:	01 00                	add    %eax,(%rax)
  400753:	00 9a fe ff ff 30    	add    %bl,0x30fffffe(%rdx)
  400759:	01 00                	add    %eax,(%rax)
  40075b:	00 2a                	add    %ch,(%rdx)
  40075d:	ff                   	(bad)  
  40075e:	ff                   	(bad)  
  40075f:	ff 50 01             	callq  *0x1(%rax)
  400762:	00 00                	add    %al,(%rax)
  400764:	68 ff ff ff 68       	pushq  $0x68ffffff
  400769:	01 00                	add    %eax,(%rax)
  40076b:	00 d8                	add    %bl,%al
  40076d:	ff                   	(bad)  
  40076e:	ff                   	(bad)  
  40076f:	ff                   	.byte 0xff
  400770:	b0 01                	mov    $0x1,%al
	...

Disassembly of section .eh_frame:

0000000000400778 <__FRAME_END__-0x168>:
  400778:	14 00                	adc    $0x0,%al
  40077a:	00 00                	add    %al,(%rax)
  40077c:	00 00                	add    %al,(%rax)
  40077e:	00 00                	add    %al,(%rax)
  400780:	01 7a 52             	add    %edi,0x52(%rdx)
  400783:	00 01                	add    %al,(%rcx)
  400785:	78 10                	js     400797 <__GNU_EH_FRAME_HDR+0x7f>
  400787:	01 1b                	add    %ebx,(%rbx)
  400789:	0c 07                	or     $0x7,%al
  40078b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400791:	00 00                	add    %al,(%rax)
  400793:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400796:	00 00                	add    %al,(%rax)
  400798:	98                   	cwtl   
  400799:	fc                   	cld    
  40079a:	ff                   	(bad)  
  40079b:	ff 2a                	ljmp   *(%rdx)
	...
  4007a5:	00 00                	add    %al,(%rax)
  4007a7:	00 14 00             	add    %dl,(%rax,%rax,1)
  4007aa:	00 00                	add    %al,(%rax)
  4007ac:	00 00                	add    %al,(%rax)
  4007ae:	00 00                	add    %al,(%rax)
  4007b0:	01 7a 52             	add    %edi,0x52(%rdx)
  4007b3:	00 01                	add    %al,(%rcx)
  4007b5:	78 10                	js     4007c7 <__GNU_EH_FRAME_HDR+0xaf>
  4007b7:	01 1b                	add    %ebx,(%rbx)
  4007b9:	0c 07                	or     $0x7,%al
  4007bb:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  4007c1:	00 00                	add    %al,(%rax)
  4007c3:	00 1c 00             	add    %bl,(%rax,%rax,1)
  4007c6:	00 00                	add    %al,(%rax)
  4007c8:	28 fc                	sub    %bh,%ah
  4007ca:	ff                   	(bad)  
  4007cb:	ff 30                	pushq  (%rax)
  4007cd:	00 00                	add    %al,(%rax)
  4007cf:	00 00                	add    %al,(%rax)
  4007d1:	0e                   	(bad)  
  4007d2:	10 46 0e             	adc    %al,0xe(%rsi)
  4007d5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4007d8:	0b 77 08             	or     0x8(%rdi),%esi
  4007db:	80 00 3f             	addb   $0x3f,(%rax)
  4007de:	1a 3b                	sbb    (%rbx),%bh
  4007e0:	2a 33                	sub    (%rbx),%dh
  4007e2:	24 22                	and    $0x22,%al
  4007e4:	00 00                	add    %al,(%rax)
  4007e6:	00 00                	add    %al,(%rax)
  4007e8:	14 00                	adc    $0x0,%al
  4007ea:	00 00                	add    %al,(%rax)
  4007ec:	44 00 00             	add    %r8b,(%rax)
  4007ef:	00 36                	add    %dh,(%rsi)
  4007f1:	fd                   	std    
  4007f2:	ff                   	(bad)  
  4007f3:	ff 25 00 00 00 00    	jmpq   *0x0(%rip)        # 4007f9 <__GNU_EH_FRAME_HDR+0xe1>
  4007f9:	00 00                	add    %al,(%rax)
  4007fb:	00 00                	add    %al,(%rax)
  4007fd:	00 00                	add    %al,(%rax)
  4007ff:	00 14 00             	add    %dl,(%rax,%rax,1)
  400802:	00 00                	add    %al,(%rax)
  400804:	5c                   	pop    %rsp
  400805:	00 00                	add    %al,(%rax)
  400807:	00 43 fd             	add    %al,-0x3(%rbx)
  40080a:	ff                   	(bad)  
  40080b:	ff 19                	lcall  *(%rcx)
  40080d:	00 00                	add    %al,(%rax)
  40080f:	00 00                	add    %al,(%rax)
  400811:	44 0e                	rex.R (bad) 
  400813:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
  400817:	00 14 00             	add    %dl,(%rax,%rax,1)
  40081a:	00 00                	add    %al,(%rax)
  40081c:	74 00                	je     40081e <__GNU_EH_FRAME_HDR+0x106>
  40081e:	00 00                	add    %al,(%rax)
  400820:	44 fd                	rex.R std 
  400822:	ff                   	(bad)  
  400823:	ff 19                	lcall  *(%rcx)
  400825:	00 00                	add    %al,(%rax)
  400827:	00 00                	add    %al,(%rax)
  400829:	44 0e                	rex.R (bad) 
  40082b:	10 54 0e 08          	adc    %dl,0x8(%rsi,%rcx,1)
  40082f:	00 14 00             	add    %dl,(%rax,%rax,1)
  400832:	00 00                	add    %al,(%rax)
  400834:	8c 00                	mov    %es,(%rax)
  400836:	00 00                	add    %al,(%rax)
  400838:	45 fd                	rex.RB std 
  40083a:	ff                   	(bad)  
  40083b:	ff 35 00 00 00 00    	pushq  0x0(%rip)        # 400841 <__GNU_EH_FRAME_HDR+0x129>
  400841:	44 0e                	rex.R (bad) 
  400843:	20 70 0e             	and    %dh,0xe(%rax)
  400846:	08 00                	or     %al,(%rax)
  400848:	1c 00                	sbb    $0x0,%al
  40084a:	00 00                	add    %al,(%rax)
  40084c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
  40084d:	00 00                	add    %al,(%rax)
  40084f:	00 62 fd             	add    %ah,-0x3(%rdx)
  400852:	ff                   	(bad)  
  400853:	ff 90 00 00 00 00    	callq  *0x0(%rax)
  400859:	47 0e                	rex.RXB (bad) 
  40085b:	e0 01                	loopne 40085e <__GNU_EH_FRAME_HDR+0x146>
  40085d:	02 88 0e 08 00 00    	add    0x80e(%rax),%cl
  400863:	00 00                	add    %al,(%rax)
  400865:	00 00                	add    %al,(%rax)
  400867:	00 14 00             	add    %dl,(%rax,%rax,1)
  40086a:	00 00                	add    %al,(%rax)
  40086c:	c4                   	(bad)  
  40086d:	00 00                	add    %al,(%rax)
  40086f:	00 d2                	add    %dl,%dl
  400871:	fd                   	std    
  400872:	ff                   	(bad)  
  400873:	ff 2f                	ljmp   *(%rdi)
  400875:	00 00                	add    %al,(%rax)
  400877:	00 00                	add    %al,(%rax)
  400879:	44 0e                	rex.R (bad) 
  40087b:	10 6a 0e             	adc    %ch,0xe(%rdx)
  40087e:	08 00                	or     %al,(%rax)
  400880:	44 00 00             	add    %r8b,(%rax)
  400883:	00 dc                	add    %bl,%ah
  400885:	00 00                	add    %al,(%rax)
  400887:	00 f8                	add    %bh,%al
  400889:	fd                   	std    
  40088a:	ff                   	(bad)  
  40088b:	ff 65 00             	jmpq   *0x0(%rbp)
  40088e:	00 00                	add    %al,(%rax)
  400890:	00 42 0e             	add    %al,0xe(%rdx)
  400893:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  400899:	8e 03                	mov    (%rbx),%es
  40089b:	45 0e                	rex.RB (bad) 
  40089d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  4008a3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff867016f1 <_end+0xffffffff861006b1>
  4008a9:	06                   	(bad)  
  4008aa:	48 0e                	rex.W (bad) 
  4008ac:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  4008b2:	72 0e                	jb     4008c2 <__GNU_EH_FRAME_HDR+0x1aa>
  4008b4:	38 41 0e             	cmp    %al,0xe(%rcx)
  4008b7:	30 41 0e             	xor    %al,0xe(%rcx)
  4008ba:	28 42 0e             	sub    %al,0xe(%rdx)
  4008bd:	20 42 0e             	and    %al,0xe(%rdx)
  4008c0:	18 42 0e             	sbb    %al,0xe(%rdx)
  4008c3:	10 42 0e             	adc    %al,0xe(%rdx)
  4008c6:	08 00                	or     %al,(%rax)
  4008c8:	14 00                	adc    $0x0,%al
  4008ca:	00 00                	add    %al,(%rax)
  4008cc:	24 01                	and    $0x1,%al
  4008ce:	00 00                	add    %al,(%rax)
  4008d0:	20 fe                	and    %bh,%dh
  4008d2:	ff                   	(bad)  
  4008d3:	ff 02                	incl   (%rdx)
	...

00000000004008e0 <__FRAME_END__>:
  4008e0:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e10 <__frame_dummy_init_array_entry>:
__init_array_start():
  600e10:	00 05 40 00 00 00    	add    %al,0x40(%rip)        # 600e56 <_DYNAMIC+0x2e>
	...

Disassembly of section .fini_array:

0000000000600e18 <__do_global_dtors_aux_fini_array_entry>:
  600e18:	e0 04                	loopne 600e1e <__do_global_dtors_aux_fini_array_entry+0x6>
  600e1a:	40 00 00             	add    %al,(%rax)
  600e1d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .jcr:

0000000000600e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e28 <_DYNAMIC>:
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	01 00                	add    %eax,(%rax)
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	0c 00                	or     $0x0,%al
  600e3a:	00 00                	add    %al,(%rax)
  600e3c:	00 00                	add    %al,(%rax)
  600e3e:	00 00                	add    %al,(%rax)
  600e40:	c8 03 40 00          	enterq $0x4003,$0x0
  600e44:	00 00                	add    %al,(%rax)
  600e46:	00 00                	add    %al,(%rax)
  600e48:	0d 00 00 00 00       	or     $0x0,%eax
  600e4d:	00 00                	add    %al,(%rax)
  600e4f:	00 f4                	add    %dh,%ah
  600e51:	06                   	(bad)  
  600e52:	40 00 00             	add    %al,(%rax)
  600e55:	00 00                	add    %al,(%rax)
  600e57:	00 19                	add    %bl,(%rcx)
  600e59:	00 00                	add    %al,(%rax)
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 10                	add    %dl,(%rax)
  600e61:	0e                   	(bad)  
  600e62:	60                   	(bad)  
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 1b                	add    %bl,(%rbx)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 08                	add    %cl,(%rax)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 1a                	add    %bl,(%rdx)
  600e79:	00 00                	add    %al,(%rax)
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 18                	add    %bl,(%rax)
  600e81:	0e                   	(bad)  
  600e82:	60                   	(bad)  
  600e83:	00 00                	add    %al,(%rax)
  600e85:	00 00                	add    %al,(%rax)
  600e87:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	08 00                	or     %al,(%rax)
  600e92:	00 00                	add    %al,(%rax)
  600e94:	00 00                	add    %al,(%rax)
  600e96:	00 00                	add    %al,(%rax)
  600e98:	f5                   	cmc    
  600e99:	fe                   	(bad)  
  600e9a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ead <_DYNAMIC+0x85>
  600ead:	00 00                	add    %al,(%rax)
  600eaf:	00 18                	add    %bl,(%rax)
  600eb1:	03 40 00             	add    0x0(%rax),%eax
  600eb4:	00 00                	add    %al,(%rax)
  600eb6:	00 00                	add    %al,(%rax)
  600eb8:	06                   	(bad)  
  600eb9:	00 00                	add    %al,(%rax)
  600ebb:	00 00                	add    %al,(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 0a                	add    %cl,(%rdx)
  600ec9:	00 00                	add    %al,(%rax)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 3f                	add    %bh,(%rdi)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 0b                	add    %cl,(%rbx)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 18                	add    %bl,(%rax)
  600ee1:	00 00                	add    %al,(%rax)
  600ee3:	00 00                	add    %al,(%rax)
  600ee5:	00 00                	add    %al,(%rax)
  600ee7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600eed <_DYNAMIC+0xc5>
	...
  600ef5:	00 00                	add    %al,(%rax)
  600ef7:	00 03                	add    %al,(%rbx)
	...
  600f01:	10 60 00             	adc    %ah,0x0(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	02 00                	add    (%rax),%al
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	30 00                	xor    %al,(%rax)
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	14 00                	adc    $0x0,%al
  600f1a:	00 00                	add    %al,(%rax)
  600f1c:	00 00                	add    %al,(%rax)
  600f1e:	00 00                	add    %al,(%rax)
  600f20:	07                   	(bad)  
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 17                	add    %dl,(%rdi)
  600f29:	00 00                	add    %al,(%rax)
  600f2b:	00 00                	add    %al,(%rax)
  600f2d:	00 00                	add    %al,(%rax)
  600f2f:	00 98 03 40 00 00    	add    %bl,0x4003(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 07                	add    %al,(%rdi)
  600f39:	00 00                	add    %al,(%rax)
  600f3b:	00 00                	add    %al,(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 08                	add    %cl,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 18                	add    %bl,(%rax)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 09                	add    %cl,(%rcx)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 18                	add    %bl,(%rax)
  600f61:	00 00                	add    %al,(%rax)
  600f63:	00 00                	add    %al,(%rax)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 fe                	add    %bh,%dh
  600f69:	ff                   	(bad)  
  600f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 60 03             	add    %ah,0x3(%rax)
  600f72:	40 00 00             	add    %al,(%rax)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 ff                	add    %bh,%bh
  600f79:	ff                   	(bad)  
  600f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 01                	add    %al,(%rcx)
  600f81:	00 00                	add    %al,(%rax)
  600f83:	00 00                	add    %al,(%rax)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 f0                	add    %dh,%al
  600f89:	ff                   	(bad)  
  600f8a:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f8d:	00 00                	add    %al,(%rax)
  600f8f:	00 58 03             	add    %bl,0x3(%rax)
  600f92:	40 00 00             	add    %al,(%rax)
	...

Disassembly of section .got:

0000000000600ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	28 0e                	sub    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 06                	add    %al,(%rsi)
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 16                	add    %dl,(%rsi)
  601021:	04 40                	add    $0x40,%al
  601023:	00 00                	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601028 <__data_start>:
	...

0000000000601030 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000601038 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x400350>
   a:	74 75                	je     81 <_init-0x400347>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3440 <_end+0x2fce2400>
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x400339>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%rsi,%rbp,1)
  22:	39 29                	cmp    %ebp,(%rcx)
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e(%rip)        # 302e3458 <_end+0x2fce2418>
  2a:	20 32                	and    %dh,(%rdx)
  2c:	30 31                	xor    %dh,(%rcx)
  2e:	36 30 36             	xor    %dh,%ss:(%rsi)
  31:	30 39                	xor    %bh,(%rcx)
	...
